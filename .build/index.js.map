{
  "version": 3,
  "sources": ["../index.ts"],
  "sourcesContent": ["const readline = require(\"readline-sync\");\nvar c1 = readline.question(\"Enter Collection_1 : \");\nvar c2  = readline.question(\"Enter Collection_2 : \");\nlet myFunc = num => Number(num);\nvar collection_1 = Array.from(String(c1).split(' '), myFunc);\nvar collection_2 = Array.from(String(c2).split(' '), myFunc);\n\n// console.log( collection_2);\n\nlet merge: ( collection_1: number[],  collection_2: number[]) => number[] = function ( collection_1: number[],  collection_2: number[]): number[]{\n  \n   let result = collection_1.concat(collection_2)\n    // console.log(result.length)\n  for(let i = 1 ; i < result.length ; i++){\n    for(let j = 0 ; j < i ; j++){\n      if(result[i] < result[j]){\n        let temp = result[i]\n        result[i] = result[j]\n        result[j] = temp\n        \n      }\n    }\n  }\n  \n  return result;\n}\nconsole.log(merge(collection_1,collection_2));\n\n"],
  "mappings": ";AAAA,MAAM,WAAW,QAAQ,eAAe;AACxC,IAAI,KAAK,SAAS,SAAS,uBAAuB;AAClD,IAAI,KAAM,SAAS,SAAS,uBAAuB;AACnD,IAAI,SAAS,SAAO,OAAO,GAAG;AAC9B,IAAI,eAAe,MAAM,KAAK,OAAO,EAAE,EAAE,MAAM,GAAG,GAAG,MAAM;AAC3D,IAAI,eAAe,MAAM,KAAK,OAAO,EAAE,EAAE,MAAM,GAAG,GAAG,MAAM;AAI3D,IAAI,QAAwE,SAAWA,eAAyBC,eAAiC;AAE9I,MAAI,SAASD,cAAa,OAAOC,aAAY;AAE9C,WAAQ,IAAI,GAAI,IAAI,OAAO,QAAS,KAAI;AACtC,aAAQ,IAAI,GAAI,IAAI,GAAI,KAAI;AAC1B,UAAG,OAAO,KAAK,OAAO,IAAG;AACvB,YAAI,OAAO,OAAO;AAClB,eAAO,KAAK,OAAO;AACnB,eAAO,KAAK;AAAA,MAEd;AAAA,IACF;AAAA,EACF;AAEA,SAAO;AACT;AACA,QAAQ,IAAI,MAAM,cAAa,YAAY,CAAC;",
  "names": ["collection_1", "collection_2"]
}
